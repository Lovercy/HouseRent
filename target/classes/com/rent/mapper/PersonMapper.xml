<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rent.dao.PersonMapper" >
  <resultMap id="BaseResultMap" type="com.rent.model.Person" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="personname" property="personname" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="homecity" property="homecity" jdbcType="INTEGER" />
    <result column="telphone" property="telphone" jdbcType="VARCHAR" />
    <result column="iswork" property="iswork" jdbcType="INTEGER" />
    <result column="workname" property="workname" jdbcType="VARCHAR" />
    <result column="newhome" property="newhome" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, userId, personname, sex, age, homecity, telphone, iswork, workname, newhome
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from person
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from person
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rent.model.Person" >
    insert into person (Id, userId, personname, 
      sex, age, homecity, 
      telphone, iswork, workname, 
      newhome)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{personname,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{age,jdbcType=INTEGER}, #{homecity,jdbcType=INTEGER}, 
      #{telphone,jdbcType=VARCHAR}, #{iswork,jdbcType=INTEGER}, #{workname,jdbcType=VARCHAR}, 
      #{newhome,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.rent.model.Person" >
    insert into person
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="personname != null" >
        personname,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="homecity != null" >
        homecity,
      </if>
      <if test="telphone != null" >
        telphone,
      </if>
      <if test="iswork != null" >
        iswork,
      </if>
      <if test="workname != null" >
        workname,
      </if>
      <if test="newhome != null" >
        newhome,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="personname != null" >
        #{personname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="homecity != null" >
        #{homecity,jdbcType=INTEGER},
      </if>
      <if test="telphone != null" >
        #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="iswork != null" >
        #{iswork,jdbcType=INTEGER},
      </if>
      <if test="workname != null" >
        #{workname,jdbcType=VARCHAR},
      </if>
      <if test="newhome != null" >
        #{newhome,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rent.model.Person" >
    update person
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="personname != null" >
        personname = #{personname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="homecity != null" >
        homecity = #{homecity,jdbcType=INTEGER},
      </if>
      <if test="telphone != null" >
        telphone = #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="iswork != null" >
        iswork = #{iswork,jdbcType=INTEGER},
      </if>
      <if test="workname != null" >
        workname = #{workname,jdbcType=VARCHAR},
      </if>
      <if test="newhome != null" >
        newhome = #{newhome,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rent.model.Person" >
    update person
    set userId = #{userid,jdbcType=INTEGER},
      personname = #{personname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      homecity = #{homecity,jdbcType=INTEGER},
      telphone = #{telphone,jdbcType=VARCHAR},
      iswork = #{iswork,jdbcType=INTEGER},
      workname = #{workname,jdbcType=VARCHAR},
      newhome = #{newhome,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>